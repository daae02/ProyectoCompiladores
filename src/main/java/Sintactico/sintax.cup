package Sintactico;

import java_cup.runtime.Symbol;

parser code
{:
    private Symbol s;
    public void syntax_error(Symbol s){
        this.s = s;
    }
    public Symbol getS(){
        return this.s;
}
:};

terminal Identificador, OperadorComa, OperadorCorcheteDer, OperadorCorcheteIz, OperadorNegacion,
        OperadorDoblePunto, OperadorParentesisDer, OperadorParentesisIz, OperadorParCuadradoIz, OperadorParCuadradoDer, OperadorPuntoComa,
        Char, Int, Long, Short, Entero, Flotante, FlotanteExponente, Octal, OctalFlotante, Hexadecimal, HexadecimalFlotante, 
        Caracter, Const, Write, Read, For, While, Switch, If, Else, Void, Case, Default, Continue, Break, Error,
        OperadorIgual,OperadorMayorIgual,OperadorMayor,OperadorMenorIgual,OperadorMenor,OperadorDesigual,OperadorORLazy,OperadorANDLazy,
        OperadorXOR,OperadorOR,OperadorAND, OperadorMultiIgual,OperadorDivIgual,OperadorModIgual, 
        OperadorIncremental,OperadorDecremental,OperadorMas,OperadorMenos,OperadorMultiplicacion,OperadorDivision,OperadorModulo,OperadorMasIgual,OperadorMenosIgual, OperadorIgualIgual
;

non terminal INICIO, GLOBALES, GLOBALESLIST, LISTGLOBALES, LISTGLOBALESSEG, LISTGLOBALESTER, FUNCIONES, 
            FUNCIONESLISTA, DECLARACIONVARIABLE, TIPO, LISTA, RESTOLISTA, DECLARACIONCONSTANTE, 
            LITERAL, WRITE, PARAMETROSWRITE, RESTOPARAMETROSWRITE, READ, PARAMETROSREAD, FUNCION, TIPOFUNCION, 
            PARAMETROSFUNCION, RESTOPARAMETROSFUNCION, CONTENIDOFUNCION, DECLARACION, 
            EXPBOOLEANA, EXPARITMETRICA, FOR, EXPRESIONESFOR, CUERPOFOR, WHILE, SWITCH, CUERPOSWITCH,
            CUERPOSWITCHLISTA, CASE, DEFAULT, IF, ELSE, IF_ELSE, ESTRUCTURACONTROL, DECASIGNACION, CUERPOFUNCION,
            EXPRESION, OPERADORASIGNACION, EXPRESIONASIGNACION, LAZYOREXPRESION, LAZYANDEXPRESION, OREXPRESION, XOREXPRESION, 
            ANDEXPRESION, EXPRESIONIGUALDAD, EXPRESIONRELACIONAL, EXPRESIONADITIVA, EXPRESIONMULTIPLICATIVA, EXPRESIONUNARIA, LISTAARGUMENTOSEXPRESIONES, EXPRESIONPOSTFIJA,
            EXPRESIONPRIMARIA, AUXINICIO, DECG, EXTERNO, DECLARADOR, INICIALIZADOR, DECLARADORINICIALIZADOR, GLOBCONS, ESTRUCTURA,
            DECLARADORINICIALIZADORCONSTANTE, LISTACONSTANTE;

precedence left OperadorCorcheteIz, OperadorCorcheteDer, OperadorParentesisIz, OperadorParentesisDer, OperadorIncremental, OperadorDecremental;
precedence left OperadorNegacion;
precedence left OperadorMultiplicacion, OperadorDivision, OperadorModulo;
precedence left OperadorMas, OperadorMenos;
precedence left OperadorMenor, OperadorMayor, OperadorMenorIgual, OperadorMayorIgual;
precedence left OperadorIgualIgual, OperadorDesigual;
precedence left OperadorAND;
precedence left OperadorXOR;
precedence left OperadorOR;
precedence left OperadorANDLazy;
precedence left OperadorORLazy;
precedence right OperadorIgual, OperadorMultiIgual, OperadorDivIgual, OperadorModIgual, OperadorMasIgual, OperadorMenosIgual;

start with INICIO
;

INICIO ::= ESTRUCTURA 
;

ESTRUCTURA ::= GLOBCONS ESTRUCTURA | FUNCIONES
;

FUNCIONES ::= FUNCION FUNCIONES | FUNCION
;

GLOBCONS ::= DECLARACIONVARIABLE | DECLARACIONCONSTANTE | error OperadorPuntoComa {: errores.add(new ErrorSintactico(parser.getS(), "Declaracion no valida")); :}
;

DECLARACIONVARIABLE ::= 
    TIPO LISTA OperadorPuntoComa
;

TIPO ::= 
    Char  |
    Int   |
    Long  |
    Short
;

LISTA ::=
    DECLARADORINICIALIZADOR | LISTA OperadorComa DECLARADORINICIALIZADOR
;

DECLARADORINICIALIZADOR ::= DECLARADOR | DECLARADOR OperadorIgual INICIALIZADOR
;

INICIALIZADOR ::= EXPRESIONASIGNACION
;

DECLARADOR ::= Identificador:id {:System.out.println("Encuentra: "+id);:} | OperadorParentesisIz DECLARADOR OperadorParentesisDer
;

DECLARACIONCONSTANTE ::= 
    Const TIPO LISTACONSTANTE OperadorPuntoComa
;

LISTACONSTANTE ::=
    DECLARADORINICIALIZADORCONSTANTE | LISTACONSTANTE OperadorComa DECLARADORINICIALIZADORCONSTANTE
;

DECLARADORINICIALIZADORCONSTANTE ::= DECLARADOR OperadorIgual INICIALIZADOR
;

LITERAL ::=
    Entero | Flotante | FlotanteExponente | Octal | OctalFlotante | Hexadecimal | HexadecimalFlotante | Caracter 
;

WRITE ::= Write OperadorParentesisIz PARAMETROSWRITE OperadorParentesisDer OperadorPuntoComa
;

PARAMETROSWRITE ::= EXPRESION RESTOPARAMETROSWRITE 
;

RESTOPARAMETROSWRITE ::= OperadorComa EXPRESION RESTOPARAMETROSWRITE | 
;

READ ::= Read OperadorParentesisIz PARAMETROSREAD OperadorParentesisDer OperadorPuntoComa
;

PARAMETROSREAD ::= Identificador | 
;

FUNCION ::= TIPO DECLARADOR OperadorParentesisIz PARAMETROSFUNCION OperadorParentesisDer OperadorCorcheteIz CONTENIDOFUNCION OperadorCorcheteDer |
            Void TIPO DECLARADOR OperadorParentesisIz PARAMETROSFUNCION OperadorParentesisDer OperadorCorcheteIz CONTENIDOFUNCION OperadorCorcheteDer
;

PARAMETROSFUNCION ::= TIPO Identificador RESTOPARAMETROSFUNCION |
;

RESTOPARAMETROSFUNCION ::= OperadorComa TIPO Identificador RESTOPARAMETROSFUNCION | 
;

CONTENIDOFUNCION ::= DECLARACION CUERPOFUNCION | CUERPOFUNCION
;

DECLARACION ::= DECLARACIONVARIABLE DECLARACION | DECLARACIONCONSTANTE DECLARACION
;

CUERPOFUNCION ::=  CUERPOFUNCION EXPRESION                    | 
                   CUERPOFUNCION ESTRUCTURACONTROL            |
                   CUERPOFUNCION READ                         | 
                   CUERPOFUNCION WRITE                        | 
                   CUERPOFUNCION Break OperadorPuntoComa      |
                   CUERPOFUNCION Continue OperadorPuntoComa   |
                   EXPRESION                                  |
                   ESTRUCTURACONTROL                          |
                   READ                                       |
                   WRITE                                      |
                   Break OperadorPuntoComa                    |
                   Continue OperadorPuntoComa          
;

EXPRESIONPRIMARIA 
        ::= Identificador
        | LITERAL 
        | OperadorParentesisIz EXPRESION OperadorParentesisDer
;

EXPRESIONPOSTFIJA 
        ::= EXPRESIONPRIMARIA
        | EXPRESIONPOSTFIJA OperadorParCuadradoIz EXPRESION OperadorParCuadradoDer
        | EXPRESIONPOSTFIJA OperadorParentesisIz OperadorParentesisDer
        | EXPRESIONPOSTFIJA OperadorParentesisIz LISTAARGUMENTOSEXPRESIONES OperadorParentesisDer
        | EXPRESIONPOSTFIJA OperadorIncremental
        | EXPRESIONPOSTFIJA OperadorDecremental
;

LISTAARGUMENTOSEXPRESIONES 
        ::= EXPRESIONASIGNACION 
        | LISTAARGUMENTOSEXPRESIONES OperadorComa EXPRESIONASIGNACION
;

EXPRESIONUNARIA 
        ::= EXPRESIONPOSTFIJA
        | OperadorIncremental EXPRESIONUNARIA
        | OperadorDecremental EXPRESIONUNARIA
;

EXPRESIONMULTIPLICATIVA
	::= EXPRESIONUNARIA 
	| EXPRESIONMULTIPLICATIVA OperadorMultiplicacion EXPRESIONUNARIA
	| EXPRESIONMULTIPLICATIVA OperadorDivision EXPRESIONUNARIA
	| EXPRESIONMULTIPLICATIVA OperadorModulo EXPRESIONUNARIA
	;

EXPRESIONADITIVA
	::= EXPRESIONMULTIPLICATIVA
	| EXPRESIONADITIVA OperadorMas EXPRESIONMULTIPLICATIVA
	| EXPRESIONADITIVA OperadorMenos EXPRESIONMULTIPLICATIVA
	;

EXPRESIONRELACIONAL
	::= EXPRESIONADITIVA
	| EXPRESIONRELACIONAL OperadorMenor EXPRESIONADITIVA
	| EXPRESIONRELACIONAL OperadorMayor EXPRESIONADITIVA
	| EXPRESIONRELACIONAL OperadorMenorIgual EXPRESIONADITIVA
	| EXPRESIONRELACIONAL OperadorMayorIgual EXPRESIONADITIVA
	;

EXPRESIONIGUALDAD
	::= EXPRESIONRELACIONAL
	| EXPRESIONIGUALDAD OperadorIgualIgual EXPRESIONRELACIONAL
	| EXPRESIONIGUALDAD OperadorDesigual EXPRESIONRELACIONAL
	;

ANDEXPRESION
	::= EXPRESIONIGUALDAD
	| ANDEXPRESION OperadorAND EXPRESIONIGUALDAD
	;

XOREXPRESION
	::= ANDEXPRESION
	| XOREXPRESION OperadorXOR ANDEXPRESION
	;

OREXPRESION
	::= XOREXPRESION
	| OREXPRESION OperadorOR XOREXPRESION
	;

LAZYANDEXPRESION
	::= OREXPRESION
	| LAZYANDEXPRESION OperadorANDLazy OREXPRESION
	;

LAZYOREXPRESION
	::= LAZYANDEXPRESION
        | LAZYOREXPRESION OperadorORLazy LAZYANDEXPRESION
	;

EXPRESIONASIGNACION
	::= LAZYOREXPRESION
	| EXPRESIONUNARIA OPERADORASIGNACION EXPRESIONASIGNACION
;

OPERADORASIGNACION ::= 
                        OperadorIgual       | 
                        OperadorMasIgual    |
                        OperadorMenosIgual  |
                        OperadorMultiIgual  |
                        OperadorDivIgual    |
                        OperadorModIgual    
;

EXPRESION
	::= EXPRESIONASIGNACION
        | OperadorNegacion EXPRESIONASIGNACION
;

FOR ::= For OperadorParentesisIz EXPRESIONESFOR OperadorParentesisDer OperadorCorcheteIz CUERPOFOR OperadorCorcheteDer 
;

EXPRESIONESFOR ::= DECLARACIONVARIABLE OperadorPuntoComa EXPRESION OperadorPuntoComa EXPRESION
;

CUERPOFOR ::=   CUERPOFOR EXPRESION                         | 
                CUERPOFOR ESTRUCTURACONTROL                 |
                CUERPOFOR READ                              | 
                CUERPOFOR WRITE                             | 
                CUERPOFOR Break OperadorPuntoComa           |
                CUERPOFOR Continue OperadorPuntoComa        |
                CUERPOFOR DECLARACION                       |
                EXPRESION                                   |
                ESTRUCTURACONTROL                           |
                READ                                        |
                WRITE                                       |
                Break OperadorPuntoComa                     |
                Continue OperadorPuntoComa                  |
                DECLARACION
;

WHILE ::= While OperadorParentesisIz EXPRESION OperadorParentesisDer OperadorCorcheteIz CUERPOFOR OperadorCorcheteDer
;

SWITCH ::= Switch OperadorParentesisIz EXPARITMETRICA OperadorParentesisDer OperadorCorcheteIz CUERPOSWITCH OperadorCorcheteDer 
;

CUERPOSWITCH ::= CASE CUERPOSWITCHLISTA DEFAULT
;

CUERPOSWITCHLISTA ::= CASE CUERPOSWITCHLISTA | 
;

CASE ::= Case LITERAL OperadorDoblePunto CUERPOFOR Break OperadorPuntoComa
;

DEFAULT ::= Default OperadorDoblePunto CUERPOFOR Break OperadorPuntoComa | 
;

IF ::= If OperadorParentesisIz EXPBOOLEANA OperadorParentesisDer OperadorCorcheteIz CUERPOFOR OperadorCorcheteDer
;

ELSE ::= Else OperadorCorcheteIz CUERPOFOR OperadorCorcheteDer | Else IF
;

IF_ELSE  ::= IF ELSE
;

ESTRUCTURACONTROL ::= IF | IF_ELSE | FOR | WHILE | SWITCH 
;
